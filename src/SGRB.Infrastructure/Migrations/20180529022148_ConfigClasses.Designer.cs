// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SGRB.Infrastructure.Data;
using System;

namespace SGRB.Infrastructure.Migrations
{
    [DbContext(typeof(RBasalContext))]
    [Migration("20180529022148_ConfigClasses")]
    partial class ConfigClasses
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.CalculoBasal", b =>
                {
                    b.Property<int>("CalculoBasalId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("CalculoBasalId");

                    b.ToTable("CalculoBasal");
                });

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.CaracterizacaoArea", b =>
                {
                    b.Property<int>("CaracterizacaoAreaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescricaoAmbiente")
                        .IsRequired()
                        .HasColumnType("varchar(10000)");

                    b.Property<double>("TamanhoPropriedade")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoArea")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoClima")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoSolo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("CaracterizacaoAreaId");

                    b.ToTable("CaracterizacaodaArea");
                });

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.ColetaAmostra", b =>
                {
                    b.Property<int>("ColetaAmostraId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Armazenamento")
                        .IsRequired()
                        .HasColumnType("varchar(10000)");

                    b.Property<DateTime>("DataColeta")
                        .HasColumnType("varchar(100)");

                    b.Property<double>("PesoAmostra")
                        .HasColumnType("varchar(40)");

                    b.Property<int>("Profundidade")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Sazonalidade")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TempodeRepouso")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TipodeEcossistema")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TipodeTratamento")
                        .IsRequired()
                        .HasColumnType("varchar(10000)");

                    b.HasKey("ColetaAmostraId");

                    b.ToTable("ColetadeAmostra");
                });

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.MateriaisEquipamentos", b =>
                {
                    b.Property<int>("MateriaisEquipamentosId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MateriaisUtilizados");

                    b.HasKey("MateriaisEquipamentosId");

                    b.ToTable("MateriaiseEquipamentos");
                });

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.Pesquisador", b =>
                {
                    b.Property<int>("PesquisadorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("InstituicaoDeEnsino")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("PesquisadorId");

                    b.ToTable("Pesquisador");
                });

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.ProcessamentoAmostra", b =>
                {
                    b.Property<int>("ProcessamentoAmostraId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DescricaoProcedimento")
                        .IsRequired()
                        .HasColumnType("varchar(8000)");

                    b.Property<int>("Peneira")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("PeriodoIncubacao")
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Refrigeracao")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Solucoes")
                        .IsRequired()
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("TipodeArmazenamento")
                        .IsRequired()
                        .HasColumnType("varchar(5000)");

                    b.HasKey("ProcessamentoAmostraId");

                    b.ToTable("ProcessamentodeAmostra");
                });
#pragma warning restore 612, 618
        }
    }
}
