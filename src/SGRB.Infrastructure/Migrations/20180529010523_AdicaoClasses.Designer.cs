// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SGRB.Infrastructure.Data;
using System;

namespace SGRB.Infrastructure.Migrations
{
    [DbContext(typeof(RBasalContext))]
    [Migration("20180529010523_AdicaoClasses")]
    partial class AdicaoClasses
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.CalculoBasal", b =>
                {
                    b.Property<int>("CalculoBasalId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("CalculoBasalId");

                    b.ToTable("CalculoBasal");
                });

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.CaracterizacaoArea", b =>
                {
                    b.Property<int>("CaracterizacaoAreaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cidade");

                    b.Property<string>("DescricaoAmbiente");

                    b.Property<double>("TamanhoPropriedade");

                    b.Property<string>("TipoArea");

                    b.Property<string>("TipoClima");

                    b.Property<string>("TipoSolo");

                    b.HasKey("CaracterizacaoAreaId");

                    b.ToTable("CaracterizacaodaArea");
                });

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.ColetaAmostra", b =>
                {
                    b.Property<int>("ColetaAmostraId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Armazenamento");

                    b.Property<DateTime>("DataColeta");

                    b.Property<double>("PesoAmostra");

                    b.Property<int>("Profundidade");

                    b.Property<bool>("Sazonalidade");

                    b.Property<int>("TempodeRepouso");

                    b.Property<string>("TipodeEcossistema");

                    b.Property<string>("TipodeTratamento");

                    b.HasKey("ColetaAmostraId");

                    b.ToTable("ColetadeAmostra");
                });

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.MateriaisEquipamentos", b =>
                {
                    b.Property<int>("MateriaisEquipamentosId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MateriaisUtilizados");

                    b.HasKey("MateriaisEquipamentosId");

                    b.ToTable("MateriaiseEquipamentos");
                });

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.Pesquisador", b =>
                {
                    b.Property<int>("PesquisadorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("InstituicaoDeEnsino");

                    b.Property<string>("Nome");

                    b.HasKey("PesquisadorId");

                    b.ToTable("Pesquisador");
                });

            modelBuilder.Entity("SGRB.AppplicationCore.Entity.ProcessamentoAmostra", b =>
                {
                    b.Property<int>("ProcessamentoAmostraId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DescricaoProcedimento");

                    b.Property<int>("Peneira");

                    b.Property<DateTime>("PeriodoIncubacao");

                    b.Property<double>("Refrigeracao");

                    b.Property<string>("Solucoes");

                    b.Property<string>("TipodeArmazenamento");

                    b.HasKey("ProcessamentoAmostraId");

                    b.ToTable("ProcessamentodeAmostra");
                });
#pragma warning restore 612, 618
        }
    }
}
